/*
*
* Copyright (c) 2021 Darryl deHaan
* SPDX-License-Identifier: MIT
*
*/

#define DEF 0
#define LOW 1
#define RAI 2
#define ADJ 3
#define KDP 4


#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
  chosen {
    zmk,matrix_transform = &default_transform;
    //zmk,matrix_transform = &five_column_transform;
  };

  behaviors {
    escomma: spanish_comma {
      compatible = "zmk,behavior-mod-morph";
      label = "SPANISH_COMMA";
      #binding-cells = <0>;
      bindings = <&kp COMMA>, <&kp LS(COMMA)>;
      mods = <(MOD_LSFT|MOD_RSFT)>;
    };
    esdot: spanish_dot {
      compatible = "zmk,behavior-mod-morph";
      label = "SPANISH_DOT";
      #binding-cells = <0>;
      bindings = <&kp DOT>, <&kp LS(DOT)>;
      mods = <(MOD_LSFT|MOD_RSFT)>;
    };
    esntilde: spanish_ntilde {
      compatible = "zmk,behavior-mod-morph";
      label = "SPANISH_NTILDE";
      #binding-cells = <0>;
      bindings = <&kp SEMI>, <&kp COLON>;
      mods = <(MOD_LSFT|MOD_RSFT)>;
    };
    // angle brackets: < GRAVE   > LS(GRAVE)
    // single quote:   ' MINUS   ? LS(MINUS)
    // double quote:   " EQUAL   ? LS(EQUAL)
  };

  keymap {
    compatible = "zmk,keymap";

    default_layer {
      label = "BASE";
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
// | SHFT |  A  |  S  |  D  | KPD |  G  |   |  H  |  J   |  K  |  L  |  {  | }    |
//                          |  F  |
// | CTRL |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  -  | ADJ NUBS  |
//                    | ALT | LWR | RAI |   | RAI | LWR  | GUI | 
//                            SPC | ENT |   | ENT | SPC  
      bindings = <
   &kp TAB   &kp Q &kp W &kp E &kp R     &kp T   &kp Y &kp U  &kp I     &kp O   &kp P       &kp BSPC
   &kp LSHFT &kp A &kp S &kp D &lt KDP F &kp G   &kp H &kp J  &kp K     &kp L   &kp RA(SQT) &kp RA(BSLH)
   &kp LCTRL &kp Z &kp X &kp C &kp V     &kp B   &kp N &kp M  &escomma  &esdot  &kp SLASH   &lt ADJ GRAVE 
            &kp LALT &lt LOW SPACE &lt RAI RET   &lt RAI RET &lt LOW SPACE &kp LGUI
      >;
    };
    lower_layer {
      label = "LOWER";
// -----------------------------------------------------------------------------------------
// |  ESC |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | ___ |
// | SHIFT| XXX | XXX | XXX | XXX | XXX |   | INS | LFT |  UP | RGT |  [  |  ]  | 
// | SHFT | XXX | XXX | XXX | XXX | XXX |   | XXX | HOM | DWN | END | XXX | XXX |
//                    | ALT | LWR | RAI |   | RAI | LWR | GUI |
//                            SPC | ENT |   | ENT | SPC  
      bindings = <
   &kp ESC    &kp N1  &kp N2  &kp N3  &kp N4  &kp N5     &kp N6     &kp N7   &kp N8   &kp N9    &kp N0       &kp BSPC
   &kp LSHFT  &none   &none   &none   &none   &none      &kp INSERT &kp LEFT &kp UP   &kp RIGHT &kp RA(LBKT) &kp RA(RBKT)
   &trans     &none   &none   &none   &none   &none      &none      &kp HOME &kp DOWN &kp END   &none       &none
                              &trans  &trans  &trans     &trans     &kp DEL  &trans
      >;
    };

    raise_layer {
      label = "RAISE";
// -----------------------------------------------------------------------------------------
// | ESC  |  !  |  "  |  ·  |  $  |  %  |   |  º  | XXX | XXX |  '  |  ¡  | ___ | 
// | SHFT |  &  |  /  |  (  |  )  |  =  |   | XXX | XXX | XXX |  `  |  +  | XXX |    
// | \    | "|" |  @  |  #  |  ~  |  *  |   |  Ñ  | XXX | XXX |  ´  |  ç  | XXX | 
//                    | GUI | LWR | SPC |   | ENT | LWR | ALT | 
//                            SPC |               | SPC   
      bindings = <
   &kp ESC      &kp LS(N1) &kp LS(N2) &kp LS(N3) &kp LS(N4)   &kp LS(N5)     &kp NUBS &none   &none  &kp MINUS &kp EQUAL &trans
   &kp LSHFT    &kp LS(N6) &kp LS(N7) &kp LS(N8) &kp LS(N9)   &kp LS(N0)     &none    &none   &none  &kp LBKT  &kp RBKT  &none
   &kp RA(NUBS) &kp RA(N1) &kp RA(N2) &kp RA(N3) &kp RA(SEMI) &kp LS(RBRC)   &kp SEMI &none   &none  &kp SQT   &kp BSLH  &none
                                      &kp LGUI   &trans       &kp SPACE      &kp RET  &trans  &kp RALT
      >;
    };

    adjust_layer {
      label = "ADJUST";
// -----------------------------------------------------------------------------------------
// |  F1  |  F2 |  F3 |  F4 |  F5 |  F6 |   |  F7 |  F8 |  F9 | F10 | F11 | F12 |
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | XXX | XXX | XXX | XXX | XXX | XXX |
// | XXX  | XXX | XXX | XXX | XXX | XXX |   | XXX | XXX | XXX | XXX | XXX | ___ |
//                    | XXX | XXX | XXX |   | XXX | XXX | XXX |
                        bindings = <
&kp F1     &kp F2       &kp F3       &kp F4       &kp F5       &kp F6         &kp F7  &kp F8  &kp F9  &kp F10 &kp F11 &kp F12
&bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4   &none   &none   &none   &none   &none   &none
&none      &none        &none        &none        &none        &none          &none   &none   &none   &none   &none   &trans
                                     &none        &none        &none          &none   &none   &none
      >;
    };

    keypad_layer {
      label = "KEYPAD";
// -----------------------------------------------------------------------------------------
// | XXX | XXX | XXX | XXX | XXX | XXX    |   | XXX |  7  |  8  |  9  | XXX | ________ |
// | XXX | XXX | XXX | XXX | XXX | XXX    |   |  /  |  4  |  5  |  6  |  +  | NUM_LOCK |
// | XXX | XXX | XXX | XXX | XXX | XXX    |   |  *  |  1  |  2  |  3  |  -  | XXXXXXXX |
//                   | ALT | SPC | KP_ENT |   |  .  |  0  | GUI |
      bindings = <
        &none   &none   &none   &none   &none   &none             &none           &kp KP_N7  &kp KP_N8  &kp KP_N9  &none        &trans
        &none   &none   &none   &none   &none   &none             &kp KP_SLASH    &kp KP_N4  &kp KP_N5  &kp KP_N6  &kp KP_PLUS  &kp KP_NLCK
        &none   &none   &none   &none   &none   &none             &kp KP_ASTERISK &kp KP_N1  &kp KP_N2  &kp KP_N3  &kp KP_MINUS &none
                                &trans  &trans  &kp KP_ENTER      &kp KP_DOT      &kp KP_N0  &kp LGUI
      >;
    };
  };
};